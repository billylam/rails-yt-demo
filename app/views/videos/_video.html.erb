<div id="player"> </div>
<div class="titleBox">
  <h4 class="videoName"> <%= playlist.videos.first.name if defined? playlist.videos.first %> </h4>
</div>

<div class="description">
  <%-#whitespace is significant for this div because of styling css %>
  <div class="descriptionBox"><%= playlist.videos.first.description.chomp if defined? playlist.videos.first %>
  </div>
  <button class="btn btn-small" id="showhide">Show more</button>
</div>

<script defer>
  var currentlyPlaying = 0;
  <% if defined? playlist %>
    var idList = <%= raw playlist.videos.pluck(:youtube_id).to_json %>;
  <% else %>
    var idList = [];
  <% end %>

  //Load IFrame YouTube API
  var tag = document.createElement('script');

  tag.src = "https://www.youtube.com/iframe_api";
  var firstScriptTag = document.getElementsByTagName('script')[0];
  firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

  //Construct Player
  var player;
  function onYouTubeIframeAPIReady() {
    player = new YT.Player('player', {
      height: '315',
      width: '560',
      playerVars: {'playlist':[idList]},
      events: {
        'onReady': onPlayerReady,
        'onStateChange': onPlayerStateChange
      }
    });
  }

  //Functionality
  var reload=false;
  function onPlayerReady(event) {
  }

  function onPlayerStateChange(event) {
    if (reload && reload == true && event.data == YT.PlayerState.UNSTARTED) {
      current = player.getPlaylistIndex();  
      reloadPlaylist(current);
    }
    if (event.data == YT.PlayerState.UNSTARTED) {
      showMetadata();
    }
  }

  function showMetadata() {
    currentPos = player.getPlaylistIndex();
    if ($('.playlistThumb').length) {
      $('.videoName').text($('.playlistThumb').eq(currentPos).data('name'));
      $('.descriptionBox').text($('.playlistThumb').eq(currentPos).data('description'));
    }
  }

  function changeVideo(position) {
    reloadPlaylist(position);
  }

  function highlight(position) {

  }

  function queueReloadPlaylist(youtube_id) {
    idList.push(youtube_id)
    reload = true;
  }

  function reloadPlaylist(position) {
    reload = false;
    player.loadPlaylist(idList, position);
  }

</script>
